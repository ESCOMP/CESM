/** @file
 *
 * This is the template for the config.h file, which is created at
 * build-time by cmake.
 */
#ifndef _PIO_CONFIG_
#define _PIO_CONFIG_

/** The major part of the version number. */
#define PIO_VERSION_MAJOR @VERSION_MAJOR@

/** The minor part of the version number. */
#define PIO_VERSION_MINOR @VERSION_MINOR@

/** The patch part of the version number. */
#define PIO_VERSION_PATCH @VERSION_PATCH@

/** Set to non-zero to use native malloc. By defauly the PIO library
 * will use the included bget() package for memory management. */
#define PIO_USE_MALLOC @USE_MALLOC@

/** Set to non-zero to turn on logging. Output may be large. */
#define PIO_ENABLE_LOGGING @ENABLE_LOGGING@

/** Size of MPI_Offset type. */
#define SIZEOF_MPI_OFFSET @SIZEOF_MPI_OFFSET@

/* buffer size for darray data. */
#define PIO_BUFFER_SIZE @PIO_BUFFER_SIZE@

#define USE_VARD @USE_VARD@

/* Does netCDF support netCDF/HDF5 files? */
#cmakedefine HAVE_NETCDF4

/* Does netCDF support parallel I/O for netCDF/HDF5 files? */
#cmakedefine HAVE_NETCDF_PAR

/* Does PIO support netCDF/HDF5 files? (Will be same as
 * HAVE_NETCDF_PAR). */
#cmakedefine _NETCDF4

/* Does netCDF and HDF5 support parallel I/O filters? */
#cmakedefine HAVE_PAR_FILTERS

/* Was PIO built with netCDF integration? */
#cmakedefine NETCDF_INTEGRATION

/* Does PIO support using pnetcdf for I/O? */
#cmakedefine _PNETCDF

#endif /* _PIO_CONFIG_ */
